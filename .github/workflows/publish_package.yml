name: Publish Python package

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  test_package:
    uses: ./.github/workflows/test_package.yml

  build_wheels_cpython:
    needs: test_package
    name: Build CPython wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 500

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup Python 3.8 explicitly (necessary for Py3.8 MacOS-14 case)
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry>=1.2,<1.8"

      - name: Install build dependencies using poetry
        env:
          INSTALL_ENDF_PARSERPY_CPP: no
        run: |
          poetry install --with dev
          poetry run python -m pip install pip --upgrade
          poetry run python -m pip install cibuildwheel==2.23.3

      - name: Build wheels
        env:
          INSTALL_ENDF_PARSERPY_CPP: yes
          CIBW_SKIP: "pp* cp36-* cp37-*"
        run: poetry run python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cpython-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_pypy:
    needs: test_package
    name: Build PyPy wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 500

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup Python 3.8 explicitly (necessary for Py3.8 MacOS-14 case)
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry>=1.2,<1.8"

      - name: Install build dependencies using poetry
        env:
          INSTALL_ENDF_PARSERPY_CPP: no
        run: |
          poetry install --with dev
          poetry run python -m pip install pip --upgrade
          poetry run python -m pip install cibuildwheel==2.23.3

      - name: Build wheels
        env:
          INSTALL_ENDF_PARSERPY_CPP: yes
          CIBW_SKIP: "cp* pp36-* pp37-*"
        run: poetry run python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-pypy-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make source distribution package
    needs: test_package
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry>=1.2,<1.8"

      - name: Set endf-parserpy version based on git tag
        run: poetry version $(git describe --tags --abbrev=0)

      - name: Build SDist
        env:
          INSTALL_ENDF_PARSERPY_CPP: no
        run: poetry build -f sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels_cpython, build_wheels_pypy, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
